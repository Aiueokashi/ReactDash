{"version":3,"sources":["components/switch.js","components/appbar.js","components/tabs.js","components/progress.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","switchBase","color","purple","backgroundColor","checked","track","Switch","theme","root","width","height","padding","margin","spacing","transform","palette","common","white","opacity","border","thumb","borderRadius","grey","transition","transitions","create","focusVisible","classes","props","focusVisibleClassName","disableRipple","display","primary","main","borderColor","boxShadow","useStyles","makeStyles","appBar","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","grow","flexGrow","menuButton","marginRight","title","breakpoints","up","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","contentShift","search","position","shape","fade","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","sectionDesktop","sectionMobile","PrimarySearchAppBar","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","useTheme","open","setOpen","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","onClose","MenuItem","onClick","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","aria-controls","aria-haspopup","className","AppBar","clsx","Toolbar","edge","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","Drawer","anchor","paper","direction","Divider","List","map","text","index","ListItem","button","key","ListItemIcon","ListItemText","background","wrapper","buttonSuccess","green","fabProgress","top","left","zIndex","buttonProgress","marginTop","CircularIntegration","loading","setLoading","success","setSuccess","timer","useRef","buttonClassname","useEffect","clearTimeout","current","handleButtonClick","window","setTimeout","Fab","CircularProgress","size","Button","disabled","App","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.46a4acea.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { purple } from '@material-ui/core/colors';\n// eslint-disable-next-line\nimport FormGroup from '@material-ui/core/FormGroup';\n// eslint-disable-next-line\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n// eslint-disable-next-line\nimport Switch from '@material-ui/core/Switch';\n// eslint-disable-next-line\nimport Grid from '@material-ui/core/Grid';\n// eslint-disable-next-line\nimport Typography from '@material-ui/core/Typography';\n\nconst PurpleSwitch = withStyles({\n  switchBase: {\n    color: purple[300],\n    '&$checked': {\n      color: purple[500],\n    },\n    '&$checked + $track': {\n      backgroundColor: purple[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nconst IOSSwitch = withStyles((theme) => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#52d869',\n        opacity: 1,\n        border: 'none',\n      },\n    },\n    '&$focusVisible $thumb': {\n      color: '#52d869',\n      border: '6px solid #fff',\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\nconst AntSwitch = withStyles((theme) => ({\n  root: {\n    width: 28,\n    height: 16,\n    padding: 0,\n    display: 'flex',\n  },\n  switchBase: {\n    padding: 2,\n    color: theme.palette.grey[500],\n    '&$checked': {\n      transform: 'translateX(12px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        opacity: 1,\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main,\n      },\n    },\n  },\n  thumb: {\n    width: 12,\n    height: 12,\n    boxShadow: 'none',\n  },\n  track: {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 16 / 2,\n    opacity: 1,\n    backgroundColor: theme.palette.common.white,\n  },\n  checked: {},\n}))(Switch);\n\nexport default { AntSwitch, IOSSwitch, PurpleSwitch };\n\n\n","import React from 'react';\nimport clsx from 'clsx';\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport Drawer from '@material-ui/core/Drawer';\n//eslint-disable-next-line\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  \n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"fixed\"\n      className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}>\n        <Toolbar>\n           <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Material-UI\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent=\"99+\" color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent=\"99+\" color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function SimpleTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"Item One\" {...a11yProps(0)} />\n          <Tab label=\"Item Two\" {...a11yProps(1)} />\n          <Tab label=\"Item Three\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        Item One\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        Item Two\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        Item Three\n      </TabPanel>\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport CheckIcon from '@material-ui/icons/Check';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nexport default function CircularIntegration() {\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const timer = React.useRef();\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success,\n  });\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  const handleButtonClick = () => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n      timer.current = window.setTimeout(() => {\n        setSuccess(true);\n        setLoading(false);\n      }, 2000);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <Fab\n          aria-label=\"save\"\n          color=\"primary\"\n          className={buttonClassname}\n          onClick={handleButtonClick}\n        >\n          {success ? <CheckIcon /> : <SaveIcon />}\n        </Fab>\n        {loading && <CircularProgress size={68} className={classes.fabProgress} />}\n      </div>\n      <div className={classes.wrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={buttonClassname}\n          disabled={loading}\n          onClick={handleButtonClick}\n        >\n          Accept terms\n        </Button>\n        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n      </div>\n    </div>\n  );\n}\n","import React, { Fragment } from 'react';\nimport './App.css';\n// eslint-disable-next-line\nimport { Tab, Tabs, Typography, Box, TextField, Grid, Button, Switch, AppBar, Toolbar } from '@material-ui/core';\n// eslint-disable-next-line\nimport CSwitch from './components/switch';\n// eslint-disable-next-line\nimport MyAppBar from './components/appbar';\n//eslint-disable-next-line\nimport MyTab from './components/tabs';\n//eslint-disable-next-line\nimport Progress from './components/progress';\n//eslint-disable-next-line\n//import Snack from './components/snackbar';\n\n\nfunction App() {\n  return (\n<Fragment>\n    <MyAppBar />\n    <Progress />\n</Fragment>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}